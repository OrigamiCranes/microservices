pipeline {
    agent any
    environment{
        DATABASE_URI = credentials("DATABASE_URI")
        AUTHOR = credentials("AUTHOR")
        DOCKERHUB = credentials("DockerHub")
        VERSION = '1.0'
        rollback = 'false'
    }
    stages{

        stage('Test Services'){
            steps{
                script{
                    if (env.rollback == 'false'){
                    sh '''
                    # Test front end
                    cd ./front
                    python3 -m pytest --cov=app --cov-report=term-missing

                    # Test Back-end
                    cd ../back
                    python3 -m pytest --cov=app --cov-report=term-missing

                    # Test Stream
                    cd ../stream
                    python3 -m pytest --cov=app --cov-report=term-missing

                    # Test Math
                    cd ../mathy
                    python3 -m pytest --cov=app --cov-report=term-missing
                    cd ..
                    '''
                    }
                }
            }
        }
        stage('Build Containers and Push'){
            steps{
                script{
                    if (env.rollback == 'false'){
                    sh ''' sudo chmod 666 /var/run/docker.sock
                    sudo usermod -aG docker jenkins
                    sudo docker login -u ${DOCKERHUB_USR} -p ${DOCKERHUB_PSW}
                    docker-compose down --rmi all
                    docker-compose build
                    sudo AUTHOR=${AUTHOR} DATABASE_URI=${DATABASE_URI} VERSION=${VERSION} docker-compose push
                    '''
                    }
                }
            }
        }
        stage("Configure Network"){
            steps{
                sh '''
                    cd ansible
                    chmod 666 inventory playbook.yaml
                    ls -la
                    ansible-playbook -i inventory playbook.yaml
                    cd ..
                    '''
            }
        }
        stage('Deploy Swarm'){
            steps{
                sh '''
                    scp -i ~/.ssh/ansible_id_rsa docker-compose.yaml jenkins@manager:/home/jenkins/docker-compose.yaml
                    ssh -i ~/.ssh/ansible_id_rsa jenkins@manager << EOF
                        export DATABASE_URI=${DATABASE_URI}
                        export AUTHOR=${AUTHOR}
                        export VERSION=${VERSION}
                        sudo chmod 666 /var/run/docker.sock
                        sudo usermod -aG docker jenkins
                        docker stack deploy --compose-file /home/jenkins/docker-compose.yaml microservices-stack
                '''
            }
        }
    }
}